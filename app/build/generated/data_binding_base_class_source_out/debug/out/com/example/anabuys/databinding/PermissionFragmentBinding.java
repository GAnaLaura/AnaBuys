// Generated by view binder compiler. Do not edit!
package com.example.anabuys.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.anabuys.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PermissionFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton button2;

  @NonNull
  public final ShapeableImageView imageView;

  @NonNull
  public final LinearLayout layoutButton;

  @NonNull
  public final LinearLayout layoutImage;

  private PermissionFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton button2, @NonNull ShapeableImageView imageView,
      @NonNull LinearLayout layoutButton, @NonNull LinearLayout layoutImage) {
    this.rootView = rootView;
    this.button2 = button2;
    this.imageView = imageView;
    this.layoutButton = layoutButton;
    this.layoutImage = layoutImage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PermissionFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PermissionFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.permission_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PermissionFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button2;
      MaterialButton button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.imageView;
      ShapeableImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.layoutButton;
      LinearLayout layoutButton = ViewBindings.findChildViewById(rootView, id);
      if (layoutButton == null) {
        break missingId;
      }

      id = R.id.layoutImage;
      LinearLayout layoutImage = ViewBindings.findChildViewById(rootView, id);
      if (layoutImage == null) {
        break missingId;
      }

      return new PermissionFragmentBinding((ConstraintLayout) rootView, button2, imageView,
          layoutButton, layoutImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
